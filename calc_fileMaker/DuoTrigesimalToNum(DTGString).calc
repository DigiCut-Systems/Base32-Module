/* 
DuoTrigesimalToNum ( DTGString )

No dependencies

( to convert Duotrigesimal strings back to numbers use custom function  NumToDuoTrigesimal ( number ) )

Created: December 26, 2010  St. Louis, MO  USA

Tim Griffith Sr.

Duotrigesimal, or base 32 numbers are like Hexadecimal numbers in that after 9, numbers are represented by letters. We know we can't use all the letters of the alphabet because the index of numbers would go beyond 31 up to 35. As best I have discovered the letters 'I' 'L' and 'O' are not used because in various forms they can be mistaken for other characters. My research has also shown that the letter 'U' has been omited because of 'accidental obscenities'.
   Throughout books and the internet there are numerous algorithms showing how to convert numbers to hex and hex to numbers. I am not a genius, but rather a bit clever enough to augment those formulas to add the additional letters beyong hex F, and substitute dividing or multplying 16 into 32. All in all it was quite simple.
   If credit is due- then it is due to those many people who have provided hex to num formulas. Thank you all- you know who you are! */

// converts a duotrigesimal (DTG) string into a decimal number
// letters omited  I  L  O  U


If ( PatternCount ( DTGString ; "I" ) > 0 or PatternCount ( DTGString ; "L" ) > 0 or PatternCount ( DTGString ; "O" ) > 0 or PatternCount ( DTGString ; "U" ) > 0 ; "Error: This string contains alpha letters not used in duotrigesimal [I,L,O,U]"
;
If ( IsEmpty ( DTGString ) ; 0 ; 
  Let( [ rest = Left ( DTGString ; Length ( DTGString ) - 1 ) ; 
           char = Upper ( Right ( DTGString ; 1 ) ) ] ; 
    // bail out if a non DTG digit is encountered
    If ( Position ( "0123456789ABCDEFGHJKLMNPQRSTVWXYZ" ; char ; 1 ; 1 ) ;    
      Substitute( char ; ["A";10]; ["B";11]; ["C";12]; ["D";13]; ["E";14]; ["F";15]; ["G";16]; ["H";17]; ["J";18]; ["K";19]; ["M";20]; ["N";21]; ["P";22]; ["Q";23]; ["R";24]; ["S";25]; ["T";26]; ["V";27]; ["W";28]; ["X";29]; ["Y";30]; ["Z";31] ) 
           + ( 32 * DuoTrigesimalToNum ( rest ) ) )
  ) 
)
)